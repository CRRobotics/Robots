// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "SetClawTargetPos.h"
#define POSITION_DIFFERENCE 3000;
#define PLATFORM_DIFFERENCE 1000;

SetClawTargetPos::SetClawTargetPos(ClawPositions targetPos):
		m_targetPos(targetPos)
{
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::containerStacker);
	m_targetPosValue = (int)m_targetPos;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void SetClawTargetPos::Initialize() {

	if(m_targetPos == ClawPositions::MAX) {

	}
	else if(!Robot::containerStacker->GetStanding()) {
		m_targetPosValue += POSITION_DIFFERENCE;
	}

	if(Robot::containerStacker->GetPlatform()) {
		m_targetPosValue += PLATFORM_DIFFERENCE;
	}
}

// Called repeatedly when this Command is scheduled to run
void SetClawTargetPos::Execute() {
	Robot::containerStacker->SetTargetPos(m_targetPosValue);
}

// Make this return true when this Command no longer needs to run execute()
bool SetClawTargetPos::IsFinished() {
	return true;
}

// Called once after isFinished returns true
void SetClawTargetPos::End() {
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void SetClawTargetPos::Interrupted() {

}
